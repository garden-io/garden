import { defineConfig, globalIgnores } from "eslint/config"
import unusedImports from "eslint-plugin-unused-imports"
import mocha from "eslint-plugin-mocha"
import header from "eslint-plugin-header"
import chaiExpect from "eslint-plugin-chai-expect"
import chaiFriendly from "eslint-plugin-chai-friendly"
import path from "node:path"
import { fileURLToPath } from "node:url"
import js from "@eslint/js"
import { FlatCompat } from "@eslint/eslintrc"

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)
const compat = new FlatCompat({
  baseDirectory: __dirname,
  recommendedConfig: js.configs.recommended,
  allConfig: js.configs.all,
})

export default defineConfig([
  globalIgnores(["**/*.d.ts*", "garden-sea/tmp/**/*"]),
  {
    extends: compat.extends(
      ".eslintrc.autogenerated.cjs",
      "plugin:@typescript-eslint/recommended",
      "plugin:prettier/recommended",
      "plugin:chai-expect/recommended",
      "plugin:chai-friendly/recommended"
    ),

    plugins: {
      "unused-imports": unusedImports,
      mocha,
      header,
      "chai-expect": chaiExpect,
      "chai-friendly": chaiFriendly,
    },

    rules: {
      "@typescript-eslint/no-floating-promises": "error",

      "@typescript-eslint/no-shadow": [
        "warn",
        {
          hoist: "all",
        },
      ],

      "@typescript-eslint/quotes": [
        "error",
        "double",
        {
          avoidEscape: true,
          allowTemplateLiterals: true,
        },
      ],

      "@typescript-eslint/no-empty-function": "warn",
      "@typescript-eslint/ban-types": "warn",
      "arrow-body-style": "off",
      "jsdoc/check-indentation": "off",
      "jsdoc/newline-after-description": "off",
      "no-console": "error",
      "no-unneeded-ternary": "error",
      "no-unused-expressions": "off",

      "chai-friendly/no-unused-expressions": [
        "error",
        {
          allowShortCircuit: true,
          allowTernary: true,
        },
      ],

      "max-len": [
        "warn",
        {
          code: 120,
          ignoreStrings: true,
          ignoreComments: true,
          ignoreTemplateLiterals: true,
        },
      ],

      "mocha/no-skipped-tests": "warn",
      "mocha/no-exclusive-tests": "error",
      "unused-imports/no-unused-imports": "error",

      "header/header": [
        2,
        "block",
        [
          "",
          " * Copyright (C) 2018-2024 Garden Technologies, Inc. <info@garden.io>",
          " *",
          " * This Source Code Form is subject to the terms of the Mozilla Public",
          " * License, v. 2.0. If a copy of the MPL was not distributed with this",
          " * file, You can obtain one at http://mozilla.org/MPL/2.0/.",
          " ",
        ],
      ],

      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          argsIgnorePattern: "^_",
          varsIgnorePattern: "^_",
          destructuredArrayIgnorePattern: "^_",
        },
      ],

      "@typescript-eslint/consistent-type-imports": "error",
      "@typescript-eslint/no-explicit-any": "warn",
    },
  },
])
